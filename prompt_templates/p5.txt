You are a helpful assistant that is an expert in writing PDDL actions. Your task is to write a PDDL action for
{action_name} in Minecraft.

Base the action you create on the following summary of a generic Minecraft action: {p1} {p2}

The recipe to craft sticks in Minecraft is: {nl_domain}

Make this action using the Minecraft recipe, and the following types and predicates:
Types: 
{p3}

Predicates: 
{p4}

And follow these rules:
    1) All precondition fluents containing objects inside your action must be unique. For example, if (DolphinPod
    ?dolphin1) and (DolphinPod ?dolphin2) are part of your actionâ€™s precondition, ?dolphin1 and ?dolphin2 must be
    distinct objects (i.e. (DolphinPod ?dolphin1) and (DolphinPod ?dolphin2) ). Use a not-equal constraint to ensure
    parameters like this are distinct. This is expressed in PDDL as (not (= ?var1 ?var2)) which ensures that ?var1 and
    ?var2 are not the same.

    2) You are only allowed to use the types and predicates I have given you.


End your final answers underneath the headers: '### Action Parameters,' '### Action Preconditions,' '### Action Effects,' and '### New Predicates' with ''' ''' comment blocks in PDDL as so:

### Action Parameters
```
- ?t - type: 'parameter_description'
```

### Action Preconditions
```
(and
    (predicate_name ?t1 ?t2) ; COMMENT DESCRIPTION
)
```

### Action Effects
```
(and
    (predicate_name ?t1 ?t2) ; COMMENT DESCRIPTION
)
```

### New Predicates
```
- (predicate_name ?t1 - type_1 ?t2 - type_2): 'predicate_description'
``` 

If there are no new predicates created, keep an empty space enclosed ```  ``` with the '### New Predicates' header.